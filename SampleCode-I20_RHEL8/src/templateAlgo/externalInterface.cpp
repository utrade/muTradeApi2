#include <cstddef>
#include <baseCommands.h>
#include "template.h"

typedef void *(*driverPtr)(void *);
extern "C"
{


/**
   * @brief getDriver
   * @param params
   * @return
   */
void getDriver(void * params)
{
    printf("Driver called \n");
    SampleTemplate::Template::bidDriver(params);
}



std::string getVersion()
{
    return API2_VERSION_STRING;
}

/**
   * @brief getFrontEndDesign
   * @return string
   */
std::string getFrontEndDesign()
{

  char params_txt[] = {
    0x5b, 0x53, 0x59, 0x4d, 0x42, 0x4f, 0x4c, 0x5d, 0x0a, 0x53, 0x59, 0x4d,
    0x42, 0x4f, 0x4c, 0x20, 0x4c, 0x45, 0x47, 0x31, 0x3d, 0x55, 0x49, 0x4e,
    0x54, 0x36, 0x34, 0x3a, 0x43, 0x3a, 0x31, 0x3a, 0x53, 0x79, 0x6d, 0x62,
    0x6f, 0x6c, 0x20, 0x4c, 0x65, 0x67, 0x31, 0x0a, 0x4f, 0x72, 0x64, 0x65,
    0x72, 0x20, 0x4d, 0x6f, 0x64, 0x65, 0x20, 0x31, 0x3d, 0x55, 0x43, 0x48,
    0x41, 0x52, 0x3a, 0x30, 0x3a, 0x31, 0x0a, 0x41, 0x63, 0x63, 0x20, 0x44,
    0x65, 0x74, 0x61, 0x69, 0x6c, 0x20, 0x31, 0x3d, 0x41, 0x43, 0x43, 0x4f,
    0x55, 0x4e, 0x54, 0x0a, 0x0a, 0x5b, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45,
    0x47, 0x59, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x53, 0x5d, 0x0a, 0x54,
    0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
    0x3d, 0x55, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x3a, 0x53, 0x50, 0x49, 0x4e,
    0x42, 0x4f, 0x58, 0x3a, 0x30, 0x3a, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39,
    0x39, 0x3a, 0x30, 0x3a, 0x51, 0x3a, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
    0x74, 0x79, 0x3a, 0x31, 0x3a, 0x30, 0x3a, 0x30, 0x0a, 0x4f, 0x72, 0x64,
    0x65, 0x72, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x3d, 0x55,
    0x49, 0x4e, 0x54, 0x36, 0x34, 0x3a, 0x53, 0x50, 0x49, 0x4e, 0x42, 0x4f,
    0x58, 0x3a, 0x30, 0x3a, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x39, 0x3a,
    0x30, 0x3a, 0x51, 0x3a, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
    0x3a, 0x31, 0x3a, 0x30, 0x3a, 0x30, 0x0a, 0x0a, 0x5b, 0x4f, 0x54, 0x48,
    0x45, 0x52, 0x5d, 0x0a
  };
  unsigned int params_txt_len = 232;



  return std::string(params_txt,params_txt_len);
}

}

